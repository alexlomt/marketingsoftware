"use strict";(()=>{var e={};e.id=8814,e.ids=[8814],e.modules={517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},5900:e=>{e.exports=require("pg")},4300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},2781:e=>{e.exports=require("stream")},3837:e=>{e.exports=require("util")},191:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>y,originalPathname:()=>E,patchFetch:()=>f,requestAsyncStorage:()=>p,routeModule:()=>l,serverHooks:()=>w,staticGenerationAsyncStorage:()=>h,staticGenerationBailout:()=>g});var a={};t.r(a),t.d(a,{POST:()=>d});var o=t(5419),s=t(9108),n=t(9678),i=t(8070),u=t(8046),c=t(5813);async function d(e){try{let r=e.headers.get("x-user-id");if(!r)return i.Z.json({error:"Authentication required"},{status:401});let{currentPassword:t,newPassword:a}=await e.json();if(!t||!a)return i.Z.json({error:"Current password and new password are required"},{status:400});if(a.length<8)return i.Z.json({error:"New password must be at least 8 characters long"},{status:400});let o=await (0,u.getDB)(),s=await (0,u.getRow)(o,"SELECT * FROM users WHERE id = ?",[r]);if(!s)return i.Z.json({error:"User not found"},{status:404});if(!await comparePassword(t,s.password_hash))return i.Z.json({error:"Current password is incorrect"},{status:400});let n=await (0,c.c_)(a);return await (0,u.updateRow)(o,"users",{password_hash:n,updated_at:new Date().toISOString()},"id = ?",[r]),i.Z.json({message:"Password changed successfully"})}catch(e){return console.error("Change password error:",e),i.Z.json({error:"Failed to change password"},{status:500})}}let l=new o.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/auth/change-password/route",pathname:"/api/auth/change-password",filename:"route",bundlePath:"app/api/auth/change-password/route"},resolvedPagePath:"/home/ubuntu/marketingsoftware/marketingsoftware-main/src/app/api/auth/change-password/route.js",nextConfigOutput:"standalone",userland:a}),{requestAsyncStorage:p,staticGenerationAsyncStorage:h,serverHooks:w,headerHooks:y,staticGenerationBailout:g}=l,E="/api/auth/change-password/route";function f(){return(0,n.patchFetch)({serverHooks:w,staticGenerationAsyncStorage:h})}},5813:(e,r,t)=>{t.d(r,{Oe:()=>i,RA:()=>u,WX:()=>c,c_:()=>n});var a=t(6521),o=t(6082);t(8046);let s=process.env.JWT_SECRET||"your-secret-key";async function n(e){return(0,a.hash)(e,10)}async function i(e,r){return(0,a.compare)(e,r)}function u(e,r="7d"){return(0,o.sign)(e,s,{expiresIn:r})}function c(e){try{return(0,o.verify)(e,s)}catch(e){return null}}},8046:(e,r,t)=>{t.d(r,{db:()=>n});var a=t(5900),o=t(4107);let s=new a.Pool({connectionString:process.env.DATABASE_URL,ssl:{rejectUnauthorized:!1},max:20,idleTimeoutMillis:3e4,connectionTimeoutMillis:2e3});s.on("connect",()=>{console.log("Database connection established")}),s.on("error",e=>{console.error("Unexpected database error:",e)});let n={async query(e,r=[]){let t=await s.connect();try{let a=Date.now(),o=await t.query(e,r),s=Date.now()-a;return s>100&&console.log("Slow query:",{text:e,duration:s,rows:o.rowCount}),o}catch(e){(0,o.dy)(e)}finally{t.release()}},async transaction(e){let r=await s.connect();try{await r.query("BEGIN");let t=await e(r);return await r.query("COMMIT"),t}catch(e){await r.query("ROLLBACK"),(0,o.dy)(e)}finally{r.release()}},async insert(e,r){let t=Object.keys(r),a=Object.values(r),o=t.map((e,r)=>`$${r+1}`).join(", "),s=t.join(", "),n=`
      INSERT INTO ${e} (${s})
      VALUES (${o})
      RETURNING *
    `;return(await this.query(n,a)).rows[0]},async update(e,r,t){let a=Object.keys(t),o=Object.values(t),s=a.map((e,r)=>`${e} = $${r+1}`).join(", "),n=`
      UPDATE ${e}
      SET ${s}, updated_at = CURRENT_TIMESTAMP
      WHERE id = $${a.length+1}
      RETURNING *
    `;return(await this.query(n,[...o,r])).rows[0]},async findWithPagination(e,r={},t={}){let{page:a=1,limit:o=20,orderBy:s="created_at",order:n="DESC",fields:i="*"}=t,u=Object.keys(r),c=Object.values(r),d="";u.length>0&&(d="WHERE "+u.map((e,r)=>null===c[r]?`${e} IS NULL`:`${e} = $${r+1}`).join(" AND "));let l=`
      SELECT COUNT(*) as total
      FROM ${e}
      ${d}
    `,p=`
      SELECT ${i}
      FROM ${e}
      ${d}
      ORDER BY ${s} ${n}
      LIMIT ${o} OFFSET ${(a-1)*o}
    `,[h,w]=await Promise.all([this.query(l,c),this.query(p,c)]),y=parseInt(h.rows[0].total);return{data:w.rows,pagination:{page:Number(a),limit:Number(o),total:y,pages:Math.ceil(y/o)}}},async end(){await s.end(),console.log("Database connection pool has ended")}}},4107:(e,r,t)=>{t.d(r,{dR:()=>o,dy:()=>s,p8:()=>a}),t(8070);class a extends Error{constructor(e){super(e),this.name="ValidationError",this.code="VALIDATION_ERROR"}}class o extends Error{constructor(e="Resource"){super(`${e} not found`),this.name="NotFoundError",this.code="NOT_FOUND"}}function s(e){if(console.error("Database error:",e),"23505"===e.code)throw new a("A record with this information already exists");if("23503"===e.code)throw new a("Referenced record does not exist");if("42P01"===e.code)throw Error("Database schema issue: Table does not exist");throw Error("Database operation failed")}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),a=r.X(0,[1638,6206,7145],()=>t(191));module.exports=a})();