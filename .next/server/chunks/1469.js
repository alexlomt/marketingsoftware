"use strict";exports.id=1469,exports.ids=[1469],exports.modules={9151:(t,e,a)=>{function n(t){return t.headers.get("x-user-id")}function i(t){return t.headers.get("x-organization-id")}a.d(e,{mk:()=>i,n5:()=>n}),a(8070),a(7439),a(5813)},5813:(t,e,a)=>{a.d(e,{Oe:()=>s,RA:()=>c,WX:()=>d,c_:()=>o});var n=a(6521),i=a(6082);a(8046);let r=process.env.JWT_SECRET||"your-secret-key";async function o(t){return(0,n.hash)(t,10)}async function s(t,e){return(0,n.compare)(t,e)}function c(t,e="7d"){return(0,i.sign)(t,r,{expiresIn:e})}function d(t){try{return(0,i.verify)(t,r)}catch(t){return null}}},8046:(t,e,a)=>{a.d(e,{db:()=>o});var n=a(5900),i=a(4107);let r=new n.Pool({connectionString:process.env.DATABASE_URL,ssl:{rejectUnauthorized:!1},max:20,idleTimeoutMillis:3e4,connectionTimeoutMillis:2e3});r.on("connect",()=>{console.log("Database connection established")}),r.on("error",t=>{console.error("Unexpected database error:",t)});let o={async query(t,e=[]){let a=await r.connect();try{let n=Date.now(),i=await a.query(t,e),r=Date.now()-n;return r>100&&console.log("Slow query:",{text:t,duration:r,rows:i.rowCount}),i}catch(t){(0,i.dy)(t)}finally{a.release()}},async transaction(t){let e=await r.connect();try{await e.query("BEGIN");let a=await t(e);return await e.query("COMMIT"),a}catch(t){await e.query("ROLLBACK"),(0,i.dy)(t)}finally{e.release()}},async insert(t,e){let a=Object.keys(e),n=Object.values(e),i=a.map((t,e)=>`$${e+1}`).join(", "),r=a.join(", "),o=`
      INSERT INTO ${t} (${r})
      VALUES (${i})
      RETURNING *
    `;return(await this.query(o,n)).rows[0]},async update(t,e,a){let n=Object.keys(a),i=Object.values(a),r=n.map((t,e)=>`${t} = $${e+1}`).join(", "),o=`
      UPDATE ${t}
      SET ${r}, updated_at = CURRENT_TIMESTAMP
      WHERE id = $${n.length+1}
      RETURNING *
    `;return(await this.query(o,[...i,e])).rows[0]},async findWithPagination(t,e={},a={}){let{page:n=1,limit:i=20,orderBy:r="created_at",order:o="DESC",fields:s="*"}=a,c=Object.keys(e),d=Object.values(e),l="";c.length>0&&(l="WHERE "+c.map((t,e)=>null===d[e]?`${t} IS NULL`:`${t} = $${e+1}`).join(" AND "));let u=`
      SELECT COUNT(*) as total
      FROM ${t}
      ${l}
    `,w=`
      SELECT ${s}
      FROM ${t}
      ${l}
      ORDER BY ${r} ${o}
      LIMIT ${i} OFFSET ${(n-1)*i}
    `,[p,_]=await Promise.all([this.query(u,d),this.query(w,d)]),g=parseInt(p.rows[0].total);return{data:_.rows,pagination:{page:Number(n),limit:Number(i),total:g,pages:Math.ceil(g/i)}}},async end(){await r.end(),console.log("Database connection pool has ended")}}},4107:(t,e,a)=>{a.d(e,{dR:()=>i,dy:()=>r,p8:()=>n}),a(8070);class n extends Error{constructor(t){super(t),this.name="ValidationError",this.code="VALIDATION_ERROR"}}class i extends Error{constructor(t="Resource"){super(`${t} not found`),this.name="NotFoundError",this.code="NOT_FOUND"}}function r(t){if(console.error("Database error:",t),"23505"===t.code)throw new n("A record with this information already exists");if("23503"===t.code)throw new n("Referenced record does not exist");if("42P01"===t.code)throw Error("Database schema issue: Table does not exist");throw Error("Database operation failed")}},6686:(t,e,a)=>{a.d(e,{EQ:()=>w,ER:()=>u,Fr:()=>d,HX:()=>r,Ht:()=>s,O_:()=>c,Tc:()=>l,bZ:()=>i,eZ:()=>p,iF:()=>_,s1:()=>o});var n=a(8046);async function i(t,e){let a=await (0,n.getDB)(),{name:i,subject:o,content:s,sender_name:c,sender_email:d,reply_to:l,template_id:u}=t,w=(0,n.generateId)();return await (0,n.insertRow)(a,"email_campaigns",{id:w,organization_id:e,name:i,subject:o,content:s,sender_name:c||null,sender_email:d||null,reply_to:l||null,template_id:u||null,status:"draft",created_at:new Date().toISOString(),updated_at:new Date().toISOString()}),r(w,e)}async function r(t,e){let a=await (0,n.getDB)(),i=await (0,n.getRow)(a,"SELECT * FROM email_campaigns WHERE id = ? AND organization_id = ?",[t,e]);if(!i)throw Error("Email campaign not found");return i}async function o(t,e={}){let a=await (0,n.getDB)(),{status:i,limit:r=50,offset:o=0,sort_by:s="created_at",sort_dir:c="desc"}=e,d="SELECT * FROM email_campaigns WHERE organization_id = ?",l=[t];return i&&(d+=" AND status = ?",l.push(i)),d+=` ORDER BY ${s} ${"asc"===c?"ASC":"DESC"} LIMIT ? OFFSET ?`,l.push(r,o),(0,n.getRows)(a,d,l)}async function s(t,e,a){let i=await (0,n.getDB)(),o=await r(t,e);if("sent"===o.status)throw Error("Cannot update a sent campaign");let s={name:void 0!==a.name?a.name:o.name,subject:void 0!==a.subject?a.subject:o.subject,content:void 0!==a.content?a.content:o.content,sender_name:void 0!==a.sender_name?a.sender_name:o.sender_name,sender_email:void 0!==a.sender_email?a.sender_email:o.sender_email,reply_to:void 0!==a.reply_to?a.reply_to:o.reply_to,template_id:void 0!==a.template_id?a.template_id:o.template_id,updated_at:new Date().toISOString()};return await (0,n.updateRow)(i,"email_campaigns",s,"id = ? AND organization_id = ?",[t,e]),r(t,e)}async function c(t,e){let a=await (0,n.getDB)();if("sent"===(await r(t,e)).status)throw Error("Cannot delete a sent campaign");await (0,n.deleteRow)(a,"email_campaigns","id = ? AND organization_id = ?",[t,e])}async function d(t,e,a){let i=await (0,n.getDB)();if("sent"===(await r(t,e)).status)throw Error("Cannot schedule a sent campaign");return await (0,n.updateRow)(i,"email_campaigns",{status:"scheduled",scheduled_at:a,updated_at:new Date().toISOString()},"id = ? AND organization_id = ?",[t,e]),r(t,e)}async function l(t,e){let a=await (0,n.getDB)();if("scheduled"!==(await r(t,e)).status)throw Error("Can only cancel scheduled campaigns");return await (0,n.updateRow)(a,"email_campaigns",{status:"draft",scheduled_at:null,updated_at:new Date().toISOString()},"id = ? AND organization_id = ?",[t,e]),r(t,e)}async function u(t,e,a){let i=await (0,n.getDB)();if("sent"===(await r(t,e)).status)throw Error("Campaign has already been sent");for(let r of(await (0,n.updateRow)(i,"email_campaigns",{status:"sent",sent_at:new Date().toISOString(),updated_at:new Date().toISOString()},"id = ? AND organization_id = ?",[t,e]),a))await (0,n.insertRow)(i,"campaign_recipients",{id:(0,n.generateId)(),campaign_id:t,contact_id:r,status:"sent",sent_at:new Date().toISOString(),created_at:new Date().toISOString(),updated_at:new Date().toISOString()});return r(t,e)}async function w(t,e){let a=await (0,n.getDB)();await r(t,e);let i=`
    SELECT cr.*, c.first_name, c.last_name, c.email
    FROM campaign_recipients cr
    JOIN contacts c ON cr.contact_id = c.id
    WHERE cr.campaign_id = ?
    ORDER BY cr.created_at DESC
  `;return(0,n.getRows)(a,i,[t])}async function p(t,e){let a=await (0,n.getDB)();await r(t,e);let i=`
    SELECT status, COUNT(*) as count
    FROM campaign_recipients
    WHERE campaign_id = ?
    GROUP BY status
  `,o=await (0,n.getRows)(a,i,[t]),s={total:0,sent:0,opened:0,clicked:0,bounced:0};return o.forEach(({status:t,count:e})=>{s[t]=e,s.total+=e}),s}async function _(t,e,a){let i=await (0,n.getDB)(),r=await (0,n.getRow)(i,"SELECT * FROM campaign_recipients WHERE campaign_id = ? AND contact_id = ?",[t,e]);if(!r)throw Error("Recipient not found");let o={status:a,updated_at:new Date().toISOString()};return"opened"!==a||r.opened_at?"clicked"!==a||r.clicked_at||(o.clicked_at=new Date().toISOString()):o.opened_at=new Date().toISOString(),await (0,n.updateRow)(i,"campaign_recipients",o,"campaign_id = ? AND contact_id = ?",[t,e]),(0,n.getRow)(i,"SELECT * FROM campaign_recipients WHERE campaign_id = ? AND contact_id = ?",[t,e])}}};