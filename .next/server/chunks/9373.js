"use strict";exports.id=9373,exports.ids=[9373],exports.modules={9151:(e,t,i)=>{function a(e){return e.headers.get("x-user-id")}function n(e){return e.headers.get("x-organization-id")}i.d(t,{mk:()=>n,n5:()=>a}),i(8070),i(7439),i(5813)},5813:(e,t,i)=>{i.d(t,{Oe:()=>s,RA:()=>d,WX:()=>c,c_:()=>r});var a=i(6521),n=i(6082);i(8046);let o=process.env.JWT_SECRET||"your-secret-key";async function r(e){return(0,a.hash)(e,10)}async function s(e,t){return(0,a.compare)(e,t)}function d(e,t="7d"){return(0,n.sign)(e,o,{expiresIn:t})}function c(e){try{return(0,n.verify)(e,o)}catch(e){return null}}},8046:(e,t,i)=>{i.d(t,{db:()=>r});var a=i(5900),n=i(4107);let o=new a.Pool({connectionString:process.env.DATABASE_URL,ssl:{rejectUnauthorized:!1},max:20,idleTimeoutMillis:3e4,connectionTimeoutMillis:2e3});o.on("connect",()=>{console.log("Database connection established")}),o.on("error",e=>{console.error("Unexpected database error:",e)});let r={async query(e,t=[]){let i=await o.connect();try{let a=Date.now(),n=await i.query(e,t),o=Date.now()-a;return o>100&&console.log("Slow query:",{text:e,duration:o,rows:n.rowCount}),n}catch(e){(0,n.dy)(e)}finally{i.release()}},async transaction(e){let t=await o.connect();try{await t.query("BEGIN");let i=await e(t);return await t.query("COMMIT"),i}catch(e){await t.query("ROLLBACK"),(0,n.dy)(e)}finally{t.release()}},async insert(e,t){let i=Object.keys(t),a=Object.values(t),n=i.map((e,t)=>`$${t+1}`).join(", "),o=i.join(", "),r=`
      INSERT INTO ${e} (${o})
      VALUES (${n})
      RETURNING *
    `;return(await this.query(r,a)).rows[0]},async update(e,t,i){let a=Object.keys(i),n=Object.values(i),o=a.map((e,t)=>`${e} = $${t+1}`).join(", "),r=`
      UPDATE ${e}
      SET ${o}, updated_at = CURRENT_TIMESTAMP
      WHERE id = $${a.length+1}
      RETURNING *
    `;return(await this.query(r,[...n,t])).rows[0]},async findWithPagination(e,t={},i={}){let{page:a=1,limit:n=20,orderBy:o="created_at",order:r="DESC",fields:s="*"}=i,d=Object.keys(t),c=Object.values(t),l="";d.length>0&&(l="WHERE "+d.map((e,t)=>null===c[t]?`${e} IS NULL`:`${e} = $${t+1}`).join(" AND "));let u=`
      SELECT COUNT(*) as total
      FROM ${e}
      ${l}
    `,E=`
      SELECT ${s}
      FROM ${e}
      ${l}
      ORDER BY ${o} ${r}
      LIMIT ${n} OFFSET ${(a-1)*n}
    `,[p,w]=await Promise.all([this.query(u,c),this.query(E,c)]),_=parseInt(p.rows[0].total);return{data:w.rows,pagination:{page:Number(a),limit:Number(n),total:_,pages:Math.ceil(_/n)}}},async end(){await o.end(),console.log("Database connection pool has ended")}}},4107:(e,t,i)=>{i.d(t,{dR:()=>n,dy:()=>o,p8:()=>a}),i(8070);class a extends Error{constructor(e){super(e),this.name="ValidationError",this.code="VALIDATION_ERROR"}}class n extends Error{constructor(e="Resource"){super(`${e} not found`),this.name="NotFoundError",this.code="NOT_FOUND"}}function o(e){if(console.error("Database error:",e),"23505"===e.code)throw new a("A record with this information already exists");if("23503"===e.code)throw new a("Referenced record does not exist");if("42P01"===e.code)throw Error("Database schema issue: Table does not exist");throw Error("Database operation failed")}},5492:(e,t,i)=>{i.d(t,{EZ:()=>r,K1:()=>s,Qe:()=>o,ZT:()=>n,x2:()=>d});var a=i(8046);async function n(e,t){let i=await (0,a.getDB)(),{pipeline_id:n,stage_id:r,contact_id:s,title:d,value:c,currency:l,expected_close_date:u,description:E,status:p}=e;if(!await (0,a.getRow)(i,"SELECT * FROM pipelines WHERE id = ? AND organization_id = ?",[n,t]))throw Error("Pipeline not found");if(!await (0,a.getRow)(i,"SELECT * FROM pipeline_stages WHERE id = ? AND pipeline_id = ?",[r,n]))throw Error("Pipeline stage not found");if(s&&!await (0,a.getRow)(i,"SELECT * FROM contacts WHERE id = ? AND organization_id = ?",[s,t]))throw Error("Contact not found");let w=(0,a.generateId)();return await (0,a.insertRow)(i,"deals",{id:w,organization_id:t,pipeline_id:n,stage_id:r,contact_id:s||null,title:d,description:E||null,value:c||null,currency:l||"USD",expected_close_date:u||null,status:p||"open",created_at:new Date().toISOString(),updated_at:new Date().toISOString()}),o(w,t)}async function o(e,t){let i=await (0,a.getDB)(),n=await (0,a.getRow)(i,"SELECT * FROM deals WHERE id = ? AND organization_id = ?",[e,t]);if(!n)throw Error("Deal not found");return n.stage=await (0,a.getRow)(i,"SELECT * FROM pipeline_stages WHERE id = ?",[n.stage_id]),n.pipeline=await (0,a.getRow)(i,"SELECT * FROM pipelines WHERE id = ?",[n.pipeline_id]),n.contact_id&&(n.contact=await (0,a.getRow)(i,"SELECT id, first_name, last_name, email, phone FROM contacts WHERE id = ?",[n.contact_id])),n}async function r(e,t={}){let i=await (0,a.getDB)(),{pipeline_id:n,stage_id:o,contact_id:r,status:s,limit:d=50,offset:c=0,sort_by:l="created_at",sort_dir:u="desc"}=t,E="SELECT * FROM deals WHERE organization_id = ?",p=[e];n&&(E+=" AND pipeline_id = ?",p.push(n)),o&&(E+=" AND stage_id = ?",p.push(o)),r&&(E+=" AND contact_id = ?",p.push(r)),s&&(E+=" AND status = ?",p.push(s)),E+=` ORDER BY ${l} ${"asc"===u?"ASC":"DESC"} LIMIT ? OFFSET ?`,p.push(d,c);let w=await (0,a.getRows)(i,E,p);for(let e of w)e.stage=await (0,a.getRow)(i,"SELECT * FROM pipeline_stages WHERE id = ?",[e.stage_id]),e.pipeline=await (0,a.getRow)(i,"SELECT * FROM pipelines WHERE id = ?",[e.pipeline_id]),e.contact_id&&(e.contact=await (0,a.getRow)(i,"SELECT id, first_name, last_name, email, phone FROM contacts WHERE id = ?",[e.contact_id]));return w}async function s(e,t,i){let n=await (0,a.getDB)(),r=await o(e,t);if(i.pipeline_id&&i.pipeline_id!==r.pipeline_id&&!await (0,a.getRow)(n,"SELECT * FROM pipelines WHERE id = ? AND organization_id = ?",[i.pipeline_id,t]))throw Error("Pipeline not found");if(i.stage_id){let e=i.pipeline_id||r.pipeline_id;if(!await (0,a.getRow)(n,"SELECT * FROM pipeline_stages WHERE id = ? AND pipeline_id = ?",[i.stage_id,e]))throw Error("Pipeline stage not found")}if(i.contact_id&&i.contact_id!==r.contact_id&&!await (0,a.getRow)(n,"SELECT * FROM contacts WHERE id = ? AND organization_id = ?",[i.contact_id,t]))throw Error("Contact not found");let s={pipeline_id:void 0!==i.pipeline_id?i.pipeline_id:r.pipeline_id,stage_id:void 0!==i.stage_id?i.stage_id:r.stage_id,contact_id:void 0!==i.contact_id?i.contact_id:r.contact_id,title:void 0!==i.title?i.title:r.title,description:void 0!==i.description?i.description:r.description,value:void 0!==i.value?i.value:r.value,currency:void 0!==i.currency?i.currency:r.currency,expected_close_date:void 0!==i.expected_close_date?i.expected_close_date:r.expected_close_date,status:void 0!==i.status?i.status:r.status,updated_at:new Date().toISOString()};return await (0,a.updateRow)(n,"deals",s,"id = ? AND organization_id = ?",[e,t]),o(e,t)}async function d(e,t){let i=await (0,a.getDB)();await o(e,t),await (0,a.deleteRow)(i,"deals","id = ? AND organization_id = ?",[e,t])}}};