"use strict";exports.id=4314,exports.ids=[4314],exports.modules={9151:(e,t,i)=>{function a(e){return e.headers.get("x-user-id")}function n(e){return e.headers.get("x-organization-id")}i.d(t,{mk:()=>n,n5:()=>a}),i(8070),i(7439),i(5813)},5813:(e,t,i)=>{i.d(t,{Oe:()=>s,RA:()=>d,WX:()=>l,c_:()=>o});var a=i(6521),n=i(6082);i(8046);let r=process.env.JWT_SECRET||"your-secret-key";async function o(e){return(0,a.hash)(e,10)}async function s(e,t){return(0,a.compare)(e,t)}function d(e,t="7d"){return(0,n.sign)(e,r,{expiresIn:t})}function l(e){try{return(0,n.verify)(e,r)}catch(e){return null}}},8046:(e,t,i)=>{i.d(t,{db:()=>o});var a=i(5900),n=i(4107);let r=new a.Pool({connectionString:process.env.DATABASE_URL,ssl:{rejectUnauthorized:!1},max:20,idleTimeoutMillis:3e4,connectionTimeoutMillis:2e3});r.on("connect",()=>{console.log("Database connection established")}),r.on("error",e=>{console.error("Unexpected database error:",e)});let o={async query(e,t=[]){let i=await r.connect();try{let a=Date.now(),n=await i.query(e,t),r=Date.now()-a;return r>100&&console.log("Slow query:",{text:e,duration:r,rows:n.rowCount}),n}catch(e){(0,n.dy)(e)}finally{i.release()}},async transaction(e){let t=await r.connect();try{await t.query("BEGIN");let i=await e(t);return await t.query("COMMIT"),i}catch(e){await t.query("ROLLBACK"),(0,n.dy)(e)}finally{t.release()}},async insert(e,t){let i=Object.keys(t),a=Object.values(t),n=i.map((e,t)=>`$${t+1}`).join(", "),r=i.join(", "),o=`
      INSERT INTO ${e} (${r})
      VALUES (${n})
      RETURNING *
    `;return(await this.query(o,a)).rows[0]},async update(e,t,i){let a=Object.keys(i),n=Object.values(i),r=a.map((e,t)=>`${e} = $${t+1}`).join(", "),o=`
      UPDATE ${e}
      SET ${r}, updated_at = CURRENT_TIMESTAMP
      WHERE id = $${a.length+1}
      RETURNING *
    `;return(await this.query(o,[...n,t])).rows[0]},async findWithPagination(e,t={},i={}){let{page:a=1,limit:n=20,orderBy:r="created_at",order:o="DESC",fields:s="*"}=i,d=Object.keys(t),l=Object.values(t),p="";d.length>0&&(p="WHERE "+d.map((e,t)=>null===l[t]?`${e} IS NULL`:`${e} = $${t+1}`).join(" AND "));let c=`
      SELECT COUNT(*) as total
      FROM ${e}
      ${p}
    `,w=`
      SELECT ${s}
      FROM ${e}
      ${p}
      ORDER BY ${r} ${o}
      LIMIT ${n} OFFSET ${(a-1)*n}
    `,[E,u]=await Promise.all([this.query(c,l),this.query(w,l)]),R=parseInt(E.rows[0].total);return{data:u.rows,pagination:{page:Number(a),limit:Number(n),total:R,pages:Math.ceil(R/n)}}},async end(){await r.end(),console.log("Database connection pool has ended")}}},4107:(e,t,i)=>{i.d(t,{dR:()=>n,dy:()=>r,p8:()=>a}),i(8070);class a extends Error{constructor(e){super(e),this.name="ValidationError",this.code="VALIDATION_ERROR"}}class n extends Error{constructor(e="Resource"){super(`${e} not found`),this.name="NotFoundError",this.code="NOT_FOUND"}}function r(e){if(console.error("Database error:",e),"23505"===e.code)throw new a("A record with this information already exists");if("23503"===e.code)throw new a("Referenced record does not exist");if("42P01"===e.code)throw Error("Database schema issue: Table does not exist");throw Error("Database operation failed")}},9899:(e,t,i)=>{i.d(t,{A4:()=>d,BN:()=>l,Jy:()=>n,KI:()=>c,ZJ:()=>o,n4:()=>w,qR:()=>r,xG:()=>s,ze:()=>p});var a=i(8046);async function n(e,t){let i=await (0,a.getDB)(),{name:n,description:o,stages:s}=e;if(await (0,a.getRow)(i,"SELECT * FROM pipelines WHERE name = ? AND organization_id = ?",[n,t]))throw Error("Pipeline with this name already exists");let d=(0,a.generateId)();if(await (0,a.insertRow)(i,"pipelines",{id:d,organization_id:t,name:n,description:o||null,created_at:new Date().toISOString(),updated_at:new Date().toISOString()}),s&&Array.isArray(s)&&s.length>0)for(let e=0;e<s.length;e++){let t=s[e];await (0,a.insertRow)(i,"pipeline_stages",{id:(0,a.generateId)(),pipeline_id:d,name:t.name,description:t.description||null,order_index:e,created_at:new Date().toISOString(),updated_at:new Date().toISOString()})}return r(d,t)}async function r(e,t){let i=await (0,a.getDB)(),n=await (0,a.getRow)(i,"SELECT * FROM pipelines WHERE id = ? AND organization_id = ?",[e,t]);if(!n)throw Error("Pipeline not found");return n.stages=await (0,a.getRows)(i,"SELECT * FROM pipeline_stages WHERE pipeline_id = ? ORDER BY order_index",[e]),n}async function o(e){let t=await (0,a.getDB)(),i=await (0,a.getRows)(t,"SELECT * FROM pipelines WHERE organization_id = ? ORDER BY name",[e]);for(let e of i)e.stages=await (0,a.getRows)(t,"SELECT * FROM pipeline_stages WHERE pipeline_id = ? ORDER BY order_index",[e.id]);return i}async function s(e,t,i){let n=await (0,a.getDB)(),o=await r(e,t);if(i.name&&i.name!==o.name&&await (0,a.getRow)(n,"SELECT * FROM pipelines WHERE name = ? AND organization_id = ? AND id != ?",[i.name,t,e]))throw Error("Pipeline with this name already exists");let s={name:void 0!==i.name?i.name:o.name,description:void 0!==i.description?i.description:o.description,updated_at:new Date().toISOString()};return await (0,a.updateRow)(n,"pipelines",s,"id = ? AND organization_id = ?",[e,t]),r(e,t)}async function d(e,t){let i=await (0,a.getDB)();await r(e,t),await (0,a.deleteRow)(i,"pipeline_stages","pipeline_id = ?",[e]),await (0,a.deleteRow)(i,"pipelines","id = ? AND organization_id = ?",[e,t])}async function l(e,t,i){let n=await (0,a.getDB)();await r(e,t);let o=await (0,a.getRow)(n,"SELECT MAX(order_index) as max_order FROM pipeline_stages WHERE pipeline_id = ?",[e]),s=o&&null!==o.max_order?o.max_order+1:0,d=(0,a.generateId)();return await (0,a.insertRow)(n,"pipeline_stages",{id:d,pipeline_id:e,name:i.name,description:i.description||null,order_index:s,created_at:new Date().toISOString(),updated_at:new Date().toISOString()}),(0,a.getRow)(n,"SELECT * FROM pipeline_stages WHERE id = ?",[d])}async function p(e,t,i,n){let o=await (0,a.getDB)();await r(t,i);let s=await (0,a.getRow)(o,"SELECT * FROM pipeline_stages WHERE id = ? AND pipeline_id = ?",[e,t]);if(!s)throw Error("Pipeline stage not found");let d={name:void 0!==n.name?n.name:s.name,description:void 0!==n.description?n.description:s.description,updated_at:new Date().toISOString()};return await (0,a.updateRow)(o,"pipeline_stages",d,"id = ?",[e]),(0,a.getRow)(o,"SELECT * FROM pipeline_stages WHERE id = ?",[e])}async function c(e,t,i){let n=await (0,a.getDB)();if(await r(t,i),!await (0,a.getRow)(n,"SELECT * FROM pipeline_stages WHERE id = ? AND pipeline_id = ?",[e,t]))throw Error("Pipeline stage not found");await (0,a.deleteRow)(n,"pipeline_stages","id = ?",[e]);let o=await (0,a.getRows)(n,"SELECT * FROM pipeline_stages WHERE pipeline_id = ? ORDER BY order_index",[t]);for(let e=0;e<o.length;e++)await (0,a.updateRow)(n,"pipeline_stages",{order_index:e},"id = ?",[o[e].id])}async function w(e,t,i){let n=await (0,a.getDB)();for(let o of(await r(e,t),i))if(!await (0,a.getRow)(n,"SELECT * FROM pipeline_stages WHERE id = ? AND pipeline_id = ?",[o,e]))throw Error(`Pipeline stage ${o} not found`);for(let e=0;e<i.length;e++)await (0,a.updateRow)(n,"pipeline_stages",{order_index:e,updated_at:new Date().toISOString()},"id = ?",[i[e]]);return(0,a.getRows)(n,"SELECT * FROM pipeline_stages WHERE pipeline_id = ? ORDER BY order_index",[e])}}};