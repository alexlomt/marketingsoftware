"use strict";exports.id=3780,exports.ids=[3780],exports.modules={9151:(t,a,e)=>{function n(t){return t.headers.get("x-user-id")}function o(t){return t.headers.get("x-organization-id")}e.d(a,{mk:()=>o,n5:()=>n}),e(8070),e(7439),e(5813)},5813:(t,a,e)=>{e.d(a,{Oe:()=>c,RA:()=>s,WX:()=>d,c_:()=>i});var n=e(6521),o=e(6082);e(8046);let r=process.env.JWT_SECRET||"your-secret-key";async function i(t){return(0,n.hash)(t,10)}async function c(t,a){return(0,n.compare)(t,a)}function s(t,a="7d"){return(0,o.sign)(t,r,{expiresIn:a})}function d(t){try{return(0,o.verify)(t,r)}catch(t){return null}}},8046:(t,a,e)=>{e.d(a,{db:()=>i});var n=e(5900),o=e(4107);let r=new n.Pool({connectionString:process.env.DATABASE_URL,ssl:{rejectUnauthorized:!1},max:20,idleTimeoutMillis:3e4,connectionTimeoutMillis:2e3});r.on("connect",()=>{console.log("Database connection established")}),r.on("error",t=>{console.error("Unexpected database error:",t)});let i={async query(t,a=[]){let e=await r.connect();try{let n=Date.now(),o=await e.query(t,a),r=Date.now()-n;return r>100&&console.log("Slow query:",{text:t,duration:r,rows:o.rowCount}),o}catch(t){(0,o.dy)(t)}finally{e.release()}},async transaction(t){let a=await r.connect();try{await a.query("BEGIN");let e=await t(a);return await a.query("COMMIT"),e}catch(t){await a.query("ROLLBACK"),(0,o.dy)(t)}finally{a.release()}},async insert(t,a){let e=Object.keys(a),n=Object.values(a),o=e.map((t,a)=>`$${a+1}`).join(", "),r=e.join(", "),i=`
      INSERT INTO ${t} (${r})
      VALUES (${o})
      RETURNING *
    `;return(await this.query(i,n)).rows[0]},async update(t,a,e){let n=Object.keys(e),o=Object.values(e),r=n.map((t,a)=>`${t} = $${a+1}`).join(", "),i=`
      UPDATE ${t}
      SET ${r}, updated_at = CURRENT_TIMESTAMP
      WHERE id = $${n.length+1}
      RETURNING *
    `;return(await this.query(i,[...o,a])).rows[0]},async findWithPagination(t,a={},e={}){let{page:n=1,limit:o=20,orderBy:r="created_at",order:i="DESC",fields:c="*"}=e,s=Object.keys(a),d=Object.values(a),l="";s.length>0&&(l="WHERE "+s.map((t,a)=>null===d[a]?`${t} IS NULL`:`${t} = $${a+1}`).join(" AND "));let w=`
      SELECT COUNT(*) as total
      FROM ${t}
      ${l}
    `,u=`
      SELECT ${c}
      FROM ${t}
      ${l}
      ORDER BY ${r} ${i}
      LIMIT ${o} OFFSET ${(n-1)*o}
    `,[E,g]=await Promise.all([this.query(w,d),this.query(u,d)]),R=parseInt(E.rows[0].total);return{data:g.rows,pagination:{page:Number(n),limit:Number(o),total:R,pages:Math.ceil(R/o)}}},async end(){await r.end(),console.log("Database connection pool has ended")}}},4107:(t,a,e)=>{e.d(a,{dR:()=>o,dy:()=>r,p8:()=>n}),e(8070);class n extends Error{constructor(t){super(t),this.name="ValidationError",this.code="VALIDATION_ERROR"}}class o extends Error{constructor(t="Resource"){super(`${t} not found`),this.name="NotFoundError",this.code="NOT_FOUND"}}function r(t){if(console.error("Database error:",t),"23505"===t.code)throw new n("A record with this information already exists");if("23503"===t.code)throw new n("Referenced record does not exist");if("42P01"===t.code)throw Error("Database schema issue: Table does not exist");throw Error("Database operation failed")}},4939:(t,a,e)=>{e.d(a,{Lp:()=>c,MT:()=>r,Pn:()=>s,Ze:()=>i,cS:()=>l,ln:()=>o,nx:()=>w,vF:()=>d});var n=e(8046);async function o(t,a){let e=await (0,n.getDB)(),{name:o,color:i}=t;if(await (0,n.getRow)(e,"SELECT * FROM tags WHERE name = ? AND organization_id = ?",[o,a]))throw Error("Tag with this name already exists");let c=(0,n.generateId)();return await (0,n.insertRow)(e,"tags",{id:c,organization_id:a,name:o,color:i||"#6366F1",created_at:new Date().toISOString(),updated_at:new Date().toISOString()}),r(c,a)}async function r(t,a){let e=await (0,n.getDB)(),o=await (0,n.getRow)(e,"SELECT * FROM tags WHERE id = ? AND organization_id = ?",[t,a]);if(!o)throw Error("Tag not found");return o}async function i(t){let a=await (0,n.getDB)();return(0,n.getRows)(a,"SELECT * FROM tags WHERE organization_id = ? ORDER BY name",[t])}async function c(t,a,e){let o=await (0,n.getDB)(),i=await r(t,a);if(e.name&&e.name!==i.name&&await (0,n.getRow)(o,"SELECT * FROM tags WHERE name = ? AND organization_id = ? AND id != ?",[e.name,a,t]))throw Error("Tag with this name already exists");let c={name:void 0!==e.name?e.name:i.name,color:void 0!==e.color?e.color:i.color,updated_at:new Date().toISOString()};return await (0,n.updateRow)(o,"tags",c,"id = ? AND organization_id = ?",[t,a]),r(t,a)}async function s(t,a){let e=await (0,n.getDB)();await r(t,a),await (0,n.deleteRow)(e,"tags","id = ? AND organization_id = ?",[t,a])}async function d(t,a,e){let o=await (0,n.getDB)();if(!await (0,n.getRow)(o,"SELECT * FROM contacts WHERE id = ? AND organization_id = ?",[t,e]))throw Error("Contact not found");let i=await r(a,e);if(await (0,n.getRow)(o,"SELECT * FROM contact_tags WHERE contact_id = ? AND tag_id = ?",[t,a]))throw Error("Contact already has this tag");let c=(0,n.generateId)();return await (0,n.insertRow)(o,"contact_tags",{id:c,contact_id:t,tag_id:a,created_at:new Date().toISOString()}),{id:c,contact_id:t,tag_id:a,tag_name:i.name,tag_color:i.color}}async function l(t,a,e){let o=await (0,n.getDB)();if(!await (0,n.getRow)(o,"SELECT * FROM contacts WHERE id = ? AND organization_id = ?",[t,e]))throw Error("Contact not found");await r(a,e),await (0,n.deleteRow)(o,"contact_tags","contact_id = ? AND tag_id = ?",[t,a])}async function w(t,a){let e=await (0,n.getDB)();if(!await (0,n.getRow)(e,"SELECT * FROM contacts WHERE id = ? AND organization_id = ?",[t,a]))throw Error("Contact not found");let o=`
    SELECT t.*
    FROM tags t
    JOIN contact_tags ct ON t.id = ct.tag_id
    WHERE ct.contact_id = ? AND t.organization_id = ?
    ORDER BY t.name
  `;return(0,n.getRows)(e,o,[t,a])}}};